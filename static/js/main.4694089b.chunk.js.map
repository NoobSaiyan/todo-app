{"version":3,"sources":["components/header/header.component.jsx","components/input/input.component.jsx","components/editable-text/editable-text.component.jsx","components/result-card/result-card.component.jsx","components/todo-list/todo-list.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","InputBox","state","text","handleChange","e","setState","target","value","handleSubmit","addItem","props","preventDefault","console","log","onSubmit","this","required","onChange","placeholder","type","React","Component","Editable","editing","handleClick","prevState","editInput","focus","id","editItem","ref","node","result","xmlns","width","height","viewBox","d","Card","onClick","setTimeout","delete","List","items","map","item","index","key","App","prev","concat","edit","change","delItem","filteredItems","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4694089b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.style.css'\r\n\r\nexport const Header = () => (\r\n    <div className=\"text\"> ToDo </div>\r\n)","import React from 'react'\r\nimport './input.style.css'\r\nclass InputBox extends React.Component{\r\n    state = {\r\n        text: \"\"\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({text: e.target.value})    \r\n    }\r\n    handleSubmit = e => {\r\n        const {addItem} = this.props;\r\n        e.preventDefault()\r\n        addItem(this.state.text)\r\n        //testing input in console\r\n        console.log( \"Checking input value -\" + this.state.text)\r\n        //clearing\r\n        this.setState({text: \"\"})\r\n        \r\n    }\r\n    render(){\r\n        return (\r\n            <form onSubmit = {this.handleSubmit}>\r\n                <input required className=\"txt\" value={this.state.text} onChange={this.handleChange} placeholder=\"Enter your task\" />\r\n                <input className=\"button\" type=\"submit\" value=\"+\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default InputBox;","import React from 'react'\r\nimport './editable-text.style.css'\r\n\r\nclass Editable extends React.Component{\r\n    state = {\r\n        editing:false\r\n    }\r\n    handleClick = e => {\r\n      e.preventDefault()\r\n        this.setState(\r\n          prevState => ({\r\n            editing: !prevState.editing\r\n          }),\r\n          () =>{\r\n            if(this.editInput){\r\n              this.editInput.focus()\r\n            }\r\n          }\r\n        )\r\n        \r\n    }\r\n    handleChange = e => {\r\n      let id = this.props.id\r\n      this.props.editItem(e.target.value, id)\r\n    }\r\n    render(){\r\n        console.log(\"editable text - \"+this.props.id)\r\n        return(\r\n            <form onSubmit={this.handleClick} className=\"container\"> \r\n                {this.state.editing ? \r\n                    (<input className=\"edit-box\" ref={node => this.editInput = node} onChange={this.handleChange} type=\"text\" value={this.props.result} />) \r\n                    : \r\n                    (<span className=\"display\">{this.props.result}</span>)\r\n                }\r\n              <button className=\"edit\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M18.363 8.464l1.433 1.431-12.67 12.669-7.125 1.436 1.439-7.127 12.665-12.668 1.431 1.431-12.255 12.224-.726 3.584 3.584-.723 12.224-12.257zm-.056-8.464l-2.815 2.817 5.691 5.692 2.817-2.821-5.693-5.688zm-12.318 18.718l11.313-11.316-.705-.707-11.313 11.314.705.709z\"/></svg>\r\n              </button>\r\n              </form>\r\n        )\r\n    }\r\n}\r\nexport default Editable","import React from 'react'\r\nimport Editable from '../editable-text/editable-text.component'\r\nimport './result-card.style.css'\r\n\r\nexport const Card = props =>{\r\n   \r\n\r\n    const handleDelete = () => {\r\n        setTimeout(props.delete(props.result), 300)\r\n    }\r\n    console.log(\"inside resultcard - \"+props.id)\r\n    return(\r\n        <div  className=\"item\">\r\n            <label className=\"checkbox-label\">\r\n                <input type=\"checkbox\"/>\r\n                <span className=\"checkbox-custom rectangular\"></span>\r\n            </label>\r\n\r\n            <Editable result={props.result} editItem={props.editItem} id={props.id}/>               \r\n\r\n            <div className=\"delete\" onClick={handleDelete}>\r\n                X\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from'../result-card/result-card.component'\r\nimport './todo-list.style.css'\r\n\r\nexport const List = props => {\r\n    return(\r\n        <div className=\"list\">\r\n            {props.items.map((item, index) => (\r\n                <Card result={item} key={index} id={index} delete={props.delete} editItem={props.editItem}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\nimport {Header} from './components/header/header.component'\nimport InputBox from './components/input/input.component'\nimport {List} from './components/todo-list/todo-list.component'\nimport './App.css'\n\nclass App extends Component{\n  constructor(){\n    super()\n    \n    this.state = {\n      items:[]\n    }\n  }\n  addItem = item => {\n    this.setState(prev => ({items: prev.items.concat(item)}))\n  }\n\n  editItem = (text, id) =>{\n    let edit = this.state.items\n    let change = text\n    edit[id] = change\n    this.setState(prevState => ({ items:  edit}))\n  }\n\n  delItem = id => {\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa\")\n    const filteredItems = this.state.items.filter(item => {\n      return (item !== id)\n    })\n    this.setState( {items: filteredItems} )\n  }\n  \n\n  render(){\n    console.log(\"# \"+this.state.items)\n    return(\n      <div className = \"App\">\n        <Header/>\n        <InputBox addItem={this.addItem} />\n        <List items={this.state.items}  delete={this.delItem} editItem={this.editItem}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}